version: '3.7'

services:

  buterpg:
    image: postgres:alpine
    container_name: buterpg
    restart: always
    networks:
      - buter
    environment:
      POSTGRES_PASSWORD: 123456
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./bin/data_pg:/var/lib/postgresql/data postgres
      - ./db_init:/docker-entrypoint-initdb.d/

  buterpgadmin:
    image: dpage/pgadmin4:latest
    container_name: buterpgadmin
    restart: always
    ports:
      - "89:80"
    environment:
      PGADMIN_DEFAULT_PASSWORD: 123456
      PGADMIN_DEFAULT_EMAIL: admin@trt.com
    volumes:
      - ./bin/data_pgadmin:/var/lib/pgadmin
    depends_on:
      - buterpg
    networks:
      - buter

  buterauth:
    build: './auth-in-kube'
    container_name: buterauth
    ports:
      - "81:8080"
    environment:
      DATASOURCE_URL: "jdbc:postgresql://buterpg:5432/authink"
      DATASOURCE_USER: "authink"
      DATASOURCE_PASSWORD: 123456
    depends_on:
      - buterpg
    networks:
      - buter
      - default

  buterbilling:
    build: './billing-in-kube'
    container_name: buterbilling
    ports:
      - "82:8080"
    environment:
      AUTH_SERVICE_URL: "http://buterauth:8080"
      ORDER_SERVICE_URL: "http://buterorder:8080"
    networks:
      - buter
      - default

  buterorder:
    build: './order-in-kube'
    container_name: buterorder
    ports:
      - "83:8080"
    environment:
      DATASOURCE_URL: "jdbc:postgresql://buterpg:5432/orderink"
      DATASOURCE_USER: "orderink"
      DATASOURCE_PASSWORD: 123456
      AUTH_SERVICE_URL: "http://buterauth:8080"
    depends_on:
      - buterpg
    networks:
      - buter
      - default

  buterweb:
    build: './buter'
    container_name: buterweb
    ports:
      - "80:8080"
    environment:
      AUTH_SERVICE_URL: "http://buterauth:8080"
      AUTH_SERVICE_EXT_URL: "http://localhost:81"
      BILLING_SERVICE_URL: "http://buterbilling:8080"
      ORDER_SERVICE_URL: "http://buterorder:8080"
    depends_on:
      - buterpg
    networks:
      - buter
      - default

  grafana:
    build: './config/grafana'
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./bin/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - buter
      - default

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./bin/prometheus:/prometheus
    networks:
      - buter
      - default

networks:
  buter:
    driver: bridge